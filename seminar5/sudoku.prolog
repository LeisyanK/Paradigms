:- use_module(library(clpfd)).      # используем эту библиотеку
sudoku(Rows) :-                     #  Rows - это  список, который содержит в себе 9 строк
    length(Rows, 9), maplist(same_length(Rows), Rows),  # length проверит, что в списке Rows 9 элементов, maplist проверит, что внутри Rows столько же элементов, как в Rows, т.е. внутри каждой строки 9 ячеек: 9x9
	append(Rows, Vs), Vs ins 1..9,  # append проверит, что в ряду цифры от 1 до 9, раскладывает ряд в список Vs, a Vs в диапазоне 1..9
	maplist(all_distinct, Rows),	# maplist принимает массив Rows и применяет процедуру all_distinct(не повторяются) к Rows, т.к. в строке значения не повторяются
	transpose(Rows, Columns),		# transpose поменяет строки и столбцы местами и создаст новый массив для столбцов, который назовет Columns
	maplist(all_distinct, Columns),	# проверяет, что по столбцам тоже элементы не повторяются
	Rows = [As,Bs,Cs,Ds,Es,Fs,Gs,Hs,Is], # разделим массив на блоки, даем имена строкам
	blocks(As,Bs,Cs), 	# блоки состоят из таких строк
	blocks(Ds,Es,Fs),	# вызов ниже (строка 14)
	blocks(Gs,Hs,Is).

blocks([], [], []).	# блок - это массив, который состоит из 3 массивов
blocks([N1,N2,N3|Ns1], [N4,N5,N6|Ns2], [N7,N8,N9|Ns3]) :-	# условие на уникальность значений для блока. для этого используем |, чтобы разделить все что до
    	all_distinct([N1,N2,N3,N4,N5,N6,N7,N8,N9]),			# и все, что после - все остальное. блок состоит из N1,N2,N3, а Ns1 - все остальное (6, 3 или 0 элементов)
    	blocks(Ns1, Ns2, Ns3).								# а N1,N2,N3,N4,N5,N6,N7,N8,N9 являются уникальными
															# вырезали 3 столбца №1..№9 у 3-х строк, т.е. получили 3х3
															# blocks(Ns1, Ns2, Ns3) - это рекурсивный вызов строки 14. в первый раз взяли первые 3 столбца, осталось 6(остаток - это Ns1, Ns2, Ns3). Во второй раз вторые 3 столбца, осталось еще 3. При третьем вызове взяли оставшиеся 3 столбца, остаток ноль. А нулевой массив - это истина (строка 13), и рекурсия дальше не пойдет.

problem([[_,_,_,_,_,_,_,_,_],		# задача: предикат, который верен для такого списка списков
         [_,_,_,_,_,3,_,8,5],
         [_,_,1,_,2,_,_,_,_],
         [_,_,_,5,_,7,_,_,_],
         [_,_,4,_,_,_,1,_,_],
         [_,9,_,_,_,_,_,_,_],
         [5,_,_,_,_,_,_,7,3],
         [_,_,2,_,1,_,_,_,_],
         [_,_,_,_,4,_,_,_,9]]).


########### Запуск запроса #############
problem(Rows), sudoku(Rows).